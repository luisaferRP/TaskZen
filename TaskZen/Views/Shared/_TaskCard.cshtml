@model TaskZen.Models.Task.TaskModel

<div class="task-card p-3 rounded shadow-sm border" id="task-@Model.Id">
    <div class="d-flex justify-content-between align-items-center">
        <h5 class="task-title mb-0 fw-semibold text-dark">@Model.Title</h5>
        <span class="badge text-secondary rounded-2 @(Model.Priority == PriorityLevel.Baja ? "bg-primary bg-opacity-10 border border-primary" :
                   Model.Priority == PriorityLevel.Media ? "bg-warning bg-opacity-10 border border-warning" :
                   "bg-danger bg-opacity-10 border border-danger")">
            @Model.Priority
        </span>
    </div>

    <p class="task-description text-muted my-2 small">@Model.Description</p>

    <div class="d-flex justify-content-end align-items-end">
        <div>
            <button class="btn btn-sm btn-outline-primary edit-task me-2" data-id="@Model.Id">
                <i class="bi bi-pencil"></i>
            </button>
            <button class="btn btn-sm btn-outline-danger delete-task" data-id="@Model.Id">
                <i class="bi bi-trash"></i>
            </button>
        </div>
    </div>
</div>


<style>
    .task-card {
        transition: all 0.2s ease-in-out;
    }

        .task-card:hover {
            transform: translateY(-2px);
            box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.1);
        }

    .btn-sm {
        padding: 5px 8px;
    }

</style>


