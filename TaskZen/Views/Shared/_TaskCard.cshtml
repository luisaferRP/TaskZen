@model TaskZen.Models.Task.TaskModel

<div class="task-card shadow-sm p-3 bg-white rounded" id="task-@Model.Id">
    <div class="d-flex justify-content-between align-items-center">
        <h5 class="task-title fw-semibold text-dark mb-0">@Model.Title</h5>
        <span class="badge rounded-2 @(Model.Priority == PriorityLevel.Baja ? "bg-primary bg-opacity-10 border border-primary text-primary" :
                   Model.Priority == PriorityLevel.Media ? "bg-warning bg-opacity-10 border border-warning text-warning" :
                   "bg-danger bg-opacity-10 border border-danger text-danger")">
            @Model.Priority
        </span>
     </div>
    <p class="task-description  text-muted  my-2">@Model.Description</p>
    <div class="d-flex justify-content-end">
        <a class="btn btn-sm btn-outline-secondary edit-task me-2" asp-controller="Tasks" asp-action="Editar" asp-route-id="@Model.Id">
            <i class="bi bi-pencil"></i> Editar
        </a>

        <button class="btn btn-sm btn-outline-danger delete-task" data-id="@Model.Id">
            <i class="bi bi-trash"></i>
        </button>
    </div>
</div>


<script>
    document.addEventListener("DOMContentLoaded", function () {
        document.querySelectorAll(".delete-task").forEach(button => {
            button.addEventListener("click", async function () {
                const taskId = this.getAttribute("data-id");

                // Muestra la alerta de confirmación
                Swal.fire({
                    title: "¿Estás seguro?",
                    text: "Esta acción no se puede deshacer.",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#d33",
                    cancelButtonColor: "#3085d6",
                    confirmButtonText: "Sí, eliminar",
                    cancelButtonText: "Cancelar"
                }).then(async (result) => {
                    if (result.isConfirmed) {
                        const response = await fetch(`/Tasks/Eliminar/${taskId}`, {
                            method: "DELETE"
                        });

                        if (response.ok) {
                            Swal.fire({
                                position: "top-end",
                                title: "Eliminado",
                                text: "La tarea ha sido eliminada con éxito.",
                                icon: "success",
                                timer: 2000,
                                showConfirmButton: false
                            }).then(() => {
                                location.reload(); // Recargar la página para actualizar la lista
                            });
                        } else {
                            Swal.fire({
                                title: "Error",
                                text: "No se pudo eliminar la tarea.",
                                icon: "error"
                            });
                        }
                    }
                });
            });
        });
    });
</script>
